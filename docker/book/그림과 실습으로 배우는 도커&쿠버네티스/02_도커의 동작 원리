### 도커의 구조
도커를 사용하는 경우 운영체제 위에 도커 엔진이 동작하고 그 위에 컨테이너가 작동한다.  
모든 컨테이너에는 리눅스의 "커널 외의 주변 부분"이 포함되어 있다.  
  
커널 외의 주변 부분이라는 것이 뭘까?
운영체제는 커널과 그 외의 주변 부분으로 구성되어 있다. 
운영체제의 역할은 소프트웨어나 프로그램의 명령을 하드웨어에 전달하는 역할을한다. 컴퓨터는 인간과 달리 지시를 할 때 명확하고 자세히 해줘야한다. 

본래의 운영체에는 커널 + 그 외의 주변 부분으로 구성된다.  
주변 부분이 소프트웨어 및 프로그램의 명령을 커널에 전달하고 커널이 하드웨어를 다룬다.  
컨터이너는 완전히 분리가 되어 있기 때문에 밑에 있는 리눅스 운영체제의 주변 부분이 컨터이너 속 프로그램의 명령을 전달 받을 수 없다.  
이러한 이유 때문에 컨터이너 속에는 그 외의 주변 부분이 들어가 있어 프로그램의 명령을 전달 받고 이를 기반이 되는 리눅스 커널에 전달하는 구조로 되어 있다.  
그냥 컨테이너 속에 리눅스 자체를 저장하면 되지 않을까? 싶지만 이러면 컨테이너가 무거워 질 수 가 있다. 커널 그외의 주변 부분만 있기 때문에 '가벼움'을 얻을 수 있다.  

### Mac과 Window에서 Docker를 실행할 수 있는 이유
Docker는 리눅스 운영체제 위에서 실행될 수 있다고 했는데 어떻게 Mac과 Window에서 도커를 실행할 수 있을까?  

Mac OS와 Window OS에 Docker를 사용하기 위해서는 2가지 방법이 있다.  
1. Hypervisor(VMware, VirtualBox)에 리눅스 운영체제 설치 후 도커 실행
2. 윈도우용 또는 Mac OS용 도커 데스크톱 설치
   - 도커 데스크톱 안에는 도커를 실행하는데 필요한 리눅스 운영체제를 포함

도커를 사용하려면 꼭 리눅스 운영체제를 갖춰야한다.  

### 도커 허브와 이미지, 그리고 컨테이너
도커에서 컨테이너를 생성하려면 이미지가 필요하다.  
그럼 이미지가 뭘까?  
이미지란 틀과 같다. 내가 이 틀에 맞춰 무언가를 생성하겠다 라는 의미이다.  
이미지 한개를 가지고 여러 개의 컨테이너를 만들 수 있다. 이런 점 때문에 다른 컴퓨터에서도 도커만 설치되어 있다면 똑같은 이미지로 설치한 경우 동일한 환경을 누릴 수 있다는 장점을 가진다.  


그리고 이미지를 가지고 컨테이너를 생성한 뒤에 컨테이너에서 여러 작업을 한 이후 해당 컨테이너를 이미지로 만들 수 있다.  

도커 허브란 무엇일까?  
도커 허브란 공개된 이미지가 모여 있는 공간이다. 도커 허브에는 사람들이 올린 다양한 이미지들이 존재한다. 여기서 이미지를 설치 받아 컨테이너를 쉽게 생성할 수 있다.  
공식 이미지를 설치하지 않는 경우 보안의 위험이 있으니 조심하자!

### 데이터 저장
컨테이너를 삭제하면 컨테이너 안에서 편집했던 파일은 당연히 사라진다. 이러한 이유 때문에 보통은 도커가 설치된 물리적 서버인 호스트 PC의 디스크를 마운트해서 이 디스크에 데이터를 저장한다.
